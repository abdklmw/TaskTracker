===== BEGIN FILE: Views\Clients\Delete.cshtml =====

@model TaskTracker.Models.Client
@{
ViewData["Title"] = "Delete";
}
<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
<h4>Client</h4>
<hr />
<dl class="row">
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Name)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Name)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Email)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Email)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Phone)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Phone)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Address)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Address)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.DefaultRate)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.DefaultRate)
</dd>
</dl>
<form asp-action="Delete">
<input type="hidden" asp-for="ClientID" />
<input type="submit" value="Delete" class="btn btn-danger" /> |
<a asp-action="Index">Back to List</a>
</form>
</div>

===== END FILE: Views\Clients\Delete.cshtml =====

===== BEGIN FILE: Views\Clients\Index.cshtml =====

@model IEnumerable<TaskTracker.Models.Client>
@{
ViewData["Title"] = "Clients";
}
<h1>Clients</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@await Html.PartialAsync("_CreateForm", new TaskTracker.Models.Client())
<p>
<button id="create-new-btn" class="btn btn-primary">Create New</button>
</p>
<div class="row mb-2">
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.Name)</strong></div>
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.Email)</strong></div>
<div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.Phone)</strong></div>
<div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.Address)</strong></div>
<div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.DefaultRate)</strong></div>
</div>
@{
var index = 1;
}
@foreach (var client in Model)
{
var clientRowViewModel = new ClientRowViewModel(client, index);
@await Html.PartialAsync("_DisplayRow", clientRowViewModel)
@await Html.PartialAsync("_EditFormRow", clientRowViewModel)
index++;
}
<style>
.edit-mode .form-control, #create-form .form-control {
width: 100%;
box-sizing: border-box;
margin: 0;
padding: 4px;
}
.edit-mode .text-danger, #create-form .text-danger {
font-size: 0.8em;
display: block;
}
.edit-mode .btn, #create-form .btn {
margin-right: 5px;
}
.alert-success {
transition: opacity 1s ease-in-out;
}
</style>
@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script src="~/js/site.min.js" asp-append-version="true"></script>
}

===== END FILE: Views\Clients\Index.cshtml =====

===== BEGIN FILE: Views\Clients\_CreateForm.cshtml =====

@model TaskTracker.Models.Client
@{
var displayStyle = ViewBag.VisibleCreateForm == true ? "" : "display:none;";
var divStyle = string.IsNullOrEmpty(displayStyle) ? "margin-bottom: 20px;" : $"{displayStyle} margin-bottom: 20px;";
}
<div id="create-form" style="@divStyle">
<form asp-action="Create" method="post" class="card p-4">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-3">
<label asp-for="Name" class="form-label">Name</label>
<input asp-for="Name" class="form-control" placeholder="Name" />
<span asp-validation-for="Name" class="text-danger"></span>
</div>
<div class="col-md-3">
<label asp-for="Email" class="form-label">Email</label>
<input asp-for="Email" class="form-control" placeholder="Email" type="email" />
<span asp-validation-for="Email" class="text-danger"></span>
</div>
<div class="col-md-2">
<label asp-for="Phone" class="form-label">Phone</label>
<input asp-for="Phone" class="form-control" placeholder="Phone" />
<span asp-validation-for="Phone" class="text-danger"></span>
</div>
<div class="col-md-2">
<label asp-for="Address" class="form-label">Address</label>
<textarea asp-for="Address" class="form-control" rows="4" placeholder="Enter street, city, state, ZIP"></textarea>
<span asp-validation-for="Address" class="text-danger"></span>
</div>
<div class="col-md-2">
<label asp-for="DefaultRate" class="form-label">Default Rate</label>
<input asp-for="DefaultRate" class="form-control" type="number" step="0.01" placeholder="Rate" />
<span asp-validation-for="DefaultRate" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success create-btn">Create</button>
<button type="button" class="btn btn-secondary cancel-create-btn">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Clients\_CreateForm.cshtml =====

===== BEGIN FILE: Views\Clients\_DisplayRow.cshtml =====

@model TaskTracker.Models.ClientRowViewModel
@{
if (Model == null || Model.Client == null)
{
return;
}
var client = Model.Client;
}
<div id="display-row-@client.ClientID" class="display-mode card mb-2 @(Model.Parity)-row">
<div class="card-body">
<div class="row">
<div class="col-md-3" data-field="Name">@client.Name</div>
<div class="col-md-3" data-field="Email">@client.Email</div>
<div class="col-md-2" data-field="Phone">@client.Phone</div>
<div class="col-md-2" data-field="Address">@client.Address</div>
<div class="col-md-2" data-field="DefaultRate">
@(client.DefaultRate is decimal defaultRate ? $"${defaultRate:F2}" : "")
</div>
<div class="col-md-12">
<button class="btn btn-primary edit-btn" data-id="@client.ClientID">Edit</button>
<a asp-action="Delete" asp-route-id="@client.ClientID" class="btn btn-danger">Delete</a>
</div>
</div>
</div>
</div>

===== END FILE: Views\Clients\_DisplayRow.cshtml =====

===== BEGIN FILE: Views\Clients\_EditFormRow.cshtml =====

@model TaskTracker.Models.ClientRowViewModel
@{
if (Model == null || Model.Client == null)
{
return;
}
var client = Model.Client;
}
<div id="edit-row-@client.ClientID" class="edit-mode card mb-2 @(Model.Parity)-row" style="display:none;">
<form id="edit-form-@client.ClientID" asp-action="Edit" asp-route-id="@client.ClientID" method="post" class="card-body">
<input type="hidden" asp-for="Client.ClientID" />
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-3">
<input asp-for="Client.Name" class="form-control" placeholder="Client Name" />
<span asp-validation-for="Client.Name" class="text-danger"></span>
</div>
<div class="col-md-3">
<input asp-for="Client.Email" class="form-control" type="email" placeholder="Email" />
<span asp-validation-for="Client.Email" class="text-danger"></span>
</div>
<div class="col-md-2">
<input asp-for="Client.Phone" class="form-control" placeholder="Phone" />
<span asp-validation-for="Client.Phone" class="text-danger"></span>
</div>
<div class="col-md-2">
<textarea asp-for="Client.Address" class="form-control" rows="4" placeholder="Enter street, city, state, ZIP"></textarea>
<span asp-validation-for="Client.Address" class="text-danger"></span>
</div>
<div class="col-md-2">
<input asp-for="Client.DefaultRate" class="form-control" type="number" step="0.01" placeholder="Default Rate" />
<span asp-validation-for="Client.DefaultRate" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success save-btn">Save</button>
<button type="button" class="btn btn-secondary cancel-btn" data-id="@client.ClientID">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Clients\_EditFormRow.cshtml =====

===== BEGIN FILE: Views\Expenses\Delete.cshtml =====

@model TaskTracker.Models.Expense
@{
ViewData["Title"] = "Delete";
}
<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
<h4>Expense</h4>
<hr />
<dl class="row">
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Client)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Client.Name)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Description)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Description)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.UnitAmount)
</dt>
<dd class="col-sm-10">
$@Html.DisplayFor(model => model.UnitAmount)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Quantity)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Quantity)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.TotalAmount)
</dt>
<dd class="col-sm-10">
$@Html.DisplayFor(model => model.TotalAmount)
</dd>
</dl>
<form asp-action="Delete">
<input type="hidden" asp-for="ExpenseID" />
<input type="submit" value="Delete" class="btn btn-danger" /> |
<a asp-action="Index">Back to List</a>
</form>
</div>

===== END FILE: Views\Expenses\Delete.cshtml =====

===== BEGIN FILE: Views\Expenses\Index.cshtml =====

@model IEnumerable<TaskTracker.Models.Expense>
@{
ViewData["Title"] = "Expenses";
}
<h1>Expenses</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@await Html.PartialAsync("_CreateForm", new TaskTracker.Models.Expense())
<p>
<button id="create-new-btn" class="btn btn-primary">Create New</button>
</p>
<div class="row mb-2">
<div class="col-md-2"><strong>Client</strong></div>
<div class="col-md-3"><strong>Description</strong></div>
<div class="col-md-2"><strong>Unit Amount</strong></div>
<div class="col-md-1"><strong>Quantity</strong></div>
<div class="col-md-2"><strong>Total Amount</strong></div>
<div class="col-md-2"><strong>Actions</strong></div>
</div>
@{
var index = 1;
}
@foreach (var expense in Model)
{
var expenseRowViewModel = new ExpenseRowViewModel(expense, index);
@await Html.PartialAsync("_DisplayRow", expenseRowViewModel)
@await Html.PartialAsync("_EditFormRow", expenseRowViewModel)
index++;
}
<style>
.edit-mode .form-control, #create-form .form-control {
width: 100%;
box-sizing: border-box;
margin: 0;
padding: 4px;
}
.edit-mode .text-danger, #create-form .text-danger {
font-size: 0.8em;
display: block;
}
.edit-mode .btn, #create-form .btn {
margin-right: 5px;
}
.alert-success {
transition: opacity 1s ease-in-out;
}
</style>
@section Scripts {
@await Html.PartialAsync("_ValidationScriptsPartial")
<script src="~/js/site.min.js" asp-append-version="true"></script>
}

===== END FILE: Views\Expenses\Index.cshtml =====

===== BEGIN FILE: Views\Expenses\_CreateForm.cshtml =====

@model TaskTracker.Models.Expense
@{
var displayStyle = ViewBag.VisibleCreateForm == true ? "" : "display:none;";
var divStyle = string.IsNullOrEmpty(displayStyle) ? "margin-bottom: 20px;" : $"{displayStyle} margin-bottom: 20px;";
}
<div id="create-form" style="@divStyle">
<form asp-action="Create" method="post" class="card p-4">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-4">
<label asp-for="ClientID" class="form-label">Client</label>
<select asp-for="ClientID" class="form-control" asp-items="@ViewBag.ClientList">
<option value="">Select a client</option>
</select>
<span asp-validation-for="ClientID" class="text-danger"></span>
</div>
<div class="col-md-4">
<label class="form-label">Product</label>
<select class="form-control product-select" onchange="updateProductFields(this)">
<option value="">Select a product</option>
@foreach (var product in ViewBag.ProductList)
{
<option value="@product.ProductID" data-sku="@product.ProductSku" data-name="@product.Name" data-price="@product.UnitPrice.ToString("F2")">
@product.ProductSku
</option>
}
</select>
</div>
<div class="col-md-4">
<label asp-for="Description" class="form-label">Description</label>
<textarea asp-for="Description" class="form-control description-input" rows="4" placeholder="Expense Description"></textarea>
<span asp-validation-for="Description" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="UnitAmount" class="form-label">Unit Amount</label>
<input asp-for="UnitAmount" class="form-control unit-amount-input" type="number" step="0.01" placeholder="0.00" />
<span asp-validation-for="UnitAmount" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="Quantity" class="form-label">Quantity</label>
<input asp-for="Quantity" class="form-control quantity-input" type="number" min="1" value="1" />
<span asp-validation-for="Quantity" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="TotalAmount" class="form-label">Total Amount</label>
<input asp-for="TotalAmount" class="form-control total-amount-input" type="number" step="0.01" readonly />
<span asp-validation-for="TotalAmount" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success create-btn">Create</button>
<button type="button" class="btn btn-secondary cancel-create-btn">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Expenses\_CreateForm.cshtml =====

===== BEGIN FILE: Views\Expenses\_DisplayRow.cshtml =====

@model TaskTracker.Models.ExpenseRowViewModel
@{
if (Model == null || Model.Expense == null)
{
return;
}
var expense = Model.Expense;
}
<div id="display-row-@expense.ExpenseID" class="display-mode card mb-2 @(Model.Parity)-row">
<div class="card-body">
<div class="row">
<div class="col-md-2" data-field="Client">@expense.Client?.Name</div>
<div class="col-md-3" data-field="Description">@expense.Description</div>
<div class="col-md-1" data-field="UnitAmount">$@expense.UnitAmount.ToString("F2")</div>
<div class="col-md-1" data-field="Quantity">@expense.Quantity</div>
<div class="col-md-1" data-field="TotalAmount">$@expense.TotalAmount.ToString("F2")</div>
<div class="col-md-2">
<button class="btn btn-primary edit-btn" data-id="@expense.ExpenseID">Edit</button>
<a asp-action="Delete" asp-route-id="@expense.ExpenseID" class="btn btn-danger">Delete</a>
</div>
</div>
</div>
</div>

===== END FILE: Views\Expenses\_DisplayRow.cshtml =====

===== BEGIN FILE: Views\Expenses\_EditFormRow.cshtml =====

@model TaskTracker.Models.ExpenseRowViewModel
@{
if (Model == null || Model.Expense == null)
{
return;
}
var expense = Model.Expense;
}
<div id="edit-row-@expense.ExpenseID" class="edit-mode card mb-2 @(Model.Parity)-row" style="display:none;">
<form id="edit-form-@expense.ExpenseID" asp-action="Edit" asp-route-id="@expense.ExpenseID" method="post" class="card-body">
<input type="hidden" asp-for="Expense.ExpenseID" />
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-2">
<label asp-for="Expense.ClientID" class="form-label">Client</label>
<select asp-for="Expense.ClientID" class="form-control" asp-items="@ViewBag.ClientList">
<option value="">Select a client</option>
</select>
<span asp-validation-for="Expense.ClientID" class="text-danger"></span>
</div>
<div class="col-md-2">
<label class="form-label">Product</label>
<select class="form-control product-select" onchange="updateProductFields(this)">
<option value="">Select a product</option>
@foreach (var product in ViewBag.ProductList)
{
<option value="@product.ProductID" data-sku="@product.ProductSku" data-name="@product.Name" data-price="@product.UnitPrice.ToString("F2")">
@product.ProductSku
</option>
}
</select>
</div>
<div class="col-md-3">
<label asp-for="Expense.Description" class="form-label">Description</label>
<textarea asp-for="Expense.Description" class="form-control description-input" rows="4" placeholder="Expense Description"></textarea>
<span asp-validation-for="Expense.Description" class="text-danger"></span>
</div>
<div class="col-md-2">
<label asp-for="Expense.UnitAmount" class="form-label">Unit Amount</label>
<input asp-for="Expense.UnitAmount" class="form-control unit-amount-input" type="number" step="0.01" placeholder="0.00" />
<span asp-validation-for="Expense.UnitAmount" class="text-danger"></span>
</div>
<div class="col-md-2">
<label asp-for="Expense.Quantity" class="form-label">Quantity</label>
<input asp-for="Expense.Quantity" class="form-control quantity-input" type="number" min="1" value="@expense.Quantity" />
<span asp-validation-for="Expense.Quantity" class="text-danger"></span>
</div>
<div class="col-md-2">
<label asp-for="Expense.TotalAmount" class="form-label">Total Amount</label>
<input asp-for="Expense.TotalAmount" class="form-control total-amount-input" type="number" step="0.01" readonly />
<span asp-validation-for="Expense.TotalAmount" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success save-btn">Save</button>
<button type="button" class="btn btn-secondary cancel-btn" data-id="@expense.ExpenseID">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Expenses\_EditFormRow.cshtml =====

===== BEGIN FILE: Views\Home\Index.cshtml =====

@model IEnumerable<TaskTracker.Models.TimeEntry>
@{
ViewData["Title"] = "Home";
var timezoneOffset = ViewBag.TimezoneOffset;
}
<h1>Task Tracker</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success alert-dismissible fade show" role="alert">
@TempData["SuccessMessage"]
<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
@TempData["ErrorMessage"]
<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}
<div class="row mb-3">
<div class="col-12 col-md-6 col-lg-4">
<button type="button" id="create-new-btn" class="btn btn-primary">Create New</button>
</div>
</div>
@await Html.PartialAsync("~/Views/TimeEntries/_CreateForm.cshtml")
<h2>Running timer(s)</h2>
@if (Model != null && Model.Any())
{
<div class="row">
@foreach (var timeEntry in Model)
{
var startLocal = timeEntry.StartDateTime.AddMinutes(ViewBag.TimezoneOffset ?? 0);
<div class="col">
<div class="card h-100">
<div class="card-body">
<div class="row">
<div class="col-8">
<h5 class="card-title">@timeEntry.Client?.Name</h5>
<p class="card-text"><strong>Project:</strong> @timeEntry.Project?.Name</p>
<p class="card-text"><strong>Started:</strong> @startLocal.ToString("yyyy-MM-dd hh:mm tt")</p>
<form asp-controller="TimeEntries" asp-action="StopTimer" method="post">
<input type="hidden" name="TimeEntryID" value="@timeEntry.TimeEntryID" />
<button type="submit" class="btn btn-danger">Stop Timer</button>
</form>
</div>
<div class="col-4">
<p class="card-text"><strong>Hours spent:</strong> <span class="hours-spent" data-time-entry-id="@timeEntry.TimeEntryID" data-start-utc="@timeEntry.StartDateTime.ToString("o")"></span></p>
</div>
</div>
</div>
</div>
</div>
}
</div>
}
else
{
<p>No running timers.</p>
}
@section Scripts {
<script>
var userTimezoneOffset = @timezoneOffset;
</script>
}

===== END FILE: Views\Home\Index.cshtml =====

===== BEGIN FILE: Views\Home\Privacy.cshtml =====

@{
ViewData["Title"] = "Privacy Policy";
}
<h1>@ViewData["Title"]</h1>
<p>Use this page to detail your site's privacy policy.</p>

===== END FILE: Views\Home\Privacy.cshtml =====

===== BEGIN FILE: Views\Home\SetTimezone.cshtml =====

@model TaskTracker.Models.SetTimezoneViewModel
@{
ViewData["Title"] = "Set Timezone";
}
<h1>Set Timezone</h1>
<div class="row">
<div class="col-md-6">
<form asp-action="SaveTimezone">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="form-group mb-3">
<label asp-for="TimeZoneId" class="control-label"></label>
<select asp-for="TimeZoneId" asp-items="ViewBag.Timezones" class="form-control"></select>
<span asp-validation-for="TimeZoneId" class="text-danger"></span>
</div>
<div class="form-group">
<input type="submit" value="Save" class="btn btn-primary" />
<a asp-action="Index" class="btn btn-secondary">Cancel</a>
</div>
</form>
</div>
</div>
@section Scripts {
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}

===== END FILE: Views\Home\SetTimezone.cshtml =====

===== BEGIN FILE: Views\Invoices\Delete.cshtml =====

@model TaskTracker.Models.Invoice
@{
ViewData["Title"] = "Delete";
}
<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
<h4>Invoice</h4>
<hr />
<dl class="row">
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.InvoiceDate)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.InvoiceDate)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.TotalAmount)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.TotalAmount)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Status)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Status)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Client)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Client.ClientID)
</dd>
</dl>
<form asp-action="Delete">
<input type="hidden" asp-for="InvoiceID" />
<input type="submit" value="Delete" class="btn btn-danger" /> |
<a asp-action="Index">Back to List</a>
</form>
</div>

===== END FILE: Views\Invoices\Delete.cshtml =====

===== BEGIN FILE: Views\Invoices\Index.cshtml =====

@model IEnumerable<TaskTracker.Models.Invoice>
@{
ViewData["Title"] = "Invoices";
}
<h1>Invoices</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@await Html.PartialAsync("_CreateForm")
<p>
<button id="create-new-btn" class="btn btn-primary">Create New</button>
</p>
<div class="row mb-2">
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.InvoiceDate)</strong></div>
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.TotalAmount)</strong></div>
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.Status)</strong></div>
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.Client)</strong></div>
</div>
@foreach (var item in Model)
{
@await Html.PartialAsync("_DisplayRow", item)
@await Html.PartialAsync("_EditFormRow", item)
}
<style>
.edit-mode .form-control, #create-form .form-control {
width: 100%;
box-sizing: border-box;
margin: 0;
padding: 4px;
}
.edit-mode .text-danger, #create-form .text-danger {
font-size: 0.8em;
display: block;
}
.edit-mode .btn, #create-form .btn {
margin-right: 5px;
}
.alert-success {
transition: opacity 1s ease-in-out;
}
</style>
@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script src="~/js/site.min.js" asp-append-version="true"></script>
}

===== END FILE: Views\Invoices\Index.cshtml =====

===== BEGIN FILE: Views\Invoices\_CreateForm.cshtml =====

@model TaskTracker.Models.Invoice
<div id="create-form" style="display:none; margin-bottom: 20px;">
<form asp-action="Create" method="post" class="card p-4">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-4">
<label asp-for="ClientID" class="form-label">Client</label>
<select asp-for="ClientID" class="form-control" asp-items="ViewBag.ClientID"></select>
<span asp-validation-for="ClientID" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="InvoiceDate" class="form-label">Invoice Date</label>
<input asp-for="InvoiceDate" class="form-control" type="date" />
<span asp-validation-for="InvoiceDate" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="TotalAmount" class="form-label">Total Amount</label>
<input asp-for="TotalAmount" class="form-control" type="number" step="0.01" />
<span asp-validation-for="TotalAmount" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="Status" class="form-label">Status</label>
<input asp-for="Status" class="form-control" />
<span asp-validation-for="Status" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success create-btn">Create</button>
<button type="button" class="btn btn-secondary cancel-create-btn">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Invoices\_CreateForm.cshtml =====

===== BEGIN FILE: Views\Invoices\_DisplayRow.cshtml =====

@model TaskTracker.Models.Invoice
<div id="display-row-@Model.InvoiceID" class="display-mode card mb-2">
<div class avenir-light card-body">
<div class="row">
<div class="col-md-2">@Model.InvoiceDate.ToString("d")</div>
<div class="col-md-2">$@Model.TotalAmount.ToString("F2")</div>
<div class="col-md-2">@Model.Status</div>
<div class="col-md-2">@Model.Client.Name</div>
<div class="col-md-2">
<button class="btn btn-primary edit-btn" data-Id="@Model.InvoiceID">Edit</button>
<a asp-action="Details" asp-route-id="@Model.InvoiceID" class="btn btn-info">Details</a>
<a asp-action="Delete" asp-route-id="@Model.InvoiceID" class="btn btn-danger">Delete</a>
</div>
</div>
</div>
</div>

===== END FILE: Views\Invoices\_DisplayRow.cshtml =====

===== BEGIN FILE: Views\Invoices\_EditFormRow.cshtml =====

@model TaskTracker.Models.Invoice
<div id="edit-row-@Model.InvoiceID" class="edit-mode card mb-2" style="display:none;">
<form id="edit-form-@Model.InvoiceID" asp-action="Edit" asp-route-id="@Model.InvoiceID" method="post" class="card-body">
<input type="hidden" asp-for="InvoiceID" />
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-4">
<label asp-for="ClientID" class="form-label">Client</label>
<select asp-for="ClientID" class="form-control" asp-items="ViewBag.ClientID"></select>
<span asp-validation-for="ClientID" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="InvoiceDate" class="form-label">Invoice Date</label>
<input asp-for="InvoiceDate" class="form-control" type="date" />
<span asp-validation-for="InvoiceDate" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="TotalAmount" class="form-label">Total Amount</label>
<input asp-for="TotalAmount" class="form-control" type="number" step="0.01" />
<span asp-validation-for="TotalAmount" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="Status" class="form-label">Status</label>
<input asp-for="Status" class="form-control" />
<span asp-validation-for="Status" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success save-btn">Save</button>
<button type="button" class="btn btn-secondary cancel-btn" data-id="@Model.InvoiceID">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Invoices\_EditFormRow.cshtml =====

===== BEGIN FILE: Views\Products\Delete.cshtml =====

@model TaskTracker.Models.Product
@{
ViewData["Title"] = "Delete";
}
<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
<h4>Product</h4>
<hr />
<dl class="row">
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Name)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Name)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Description)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Description)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.UnitPrice)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.UnitPrice)
</dd>
</dl>
<form asp-action="Delete">
<input type="hidden" asp-for="ProductID" />
<input type="submit" value="Delete" class="btn btn-danger" /> |
<a asp-action="Index">Back to List</a>
</form>
</div>

===== END FILE: Views\Products\Delete.cshtml =====

===== BEGIN FILE: Views\Products\Index.cshtml =====

@model IEnumerable<TaskTracker.Models.Product>
@{
ViewData["Title"] = "Products";
}
<h1>Products</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@await Html.PartialAsync("_CreateForm", new Product {ProductSku = "instatiate"})
<p>
<button id="create-new-btn" class="btn btn-primary">Create New</button>
</p>
<div class="row mb-2">
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.ProductSku)</strong></div>
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.Name)</strong></div>
<div class="col-md-3"><strong>@Html.DisplayNameFor(model => model.Description)</strong></div>
<div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.UnitPrice)</strong></div>
</div>
@{
var index = 1;
}
@foreach (var product in Model)
{
var productRowViewModel = new ProductRowViewModel(product, index);
@await Html.PartialAsync("_DisplayRow", productRowViewModel)
@await Html.PartialAsync("_EditFormRow", productRowViewModel)
index++;
}
<style>
.edit-mode .form-control, #create-form .form-control {
width: 100%;
box-sizing: border-box;
margin: 0;
padding: 4px;
}
.edit-mode .text-danger, #create-form .text-danger {
font-size: 0.8em;
display: block;
}
.edit-mode .btn, #create-form .btn {
margin-right: 5px;
}
.alert-success {
transition: opacity 1s ease-in-out;
}
</style>
@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script src="~/js/site.min.js" asp-append-version="true"></script>
}

===== END FILE: Views\Products\Index.cshtml =====

===== BEGIN FILE: Views\Products\_CreateForm.cshtml =====

@model TaskTracker.Models.Product
<div id="create-form" style="display:none; margin-bottom: 20px;">
<form asp-action="Create" method="post" class="card p-4">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-3">
<label asp-for="ProductSku" class="form-label">Product Sku</label>
<input asp-for="ProductSku" class="form-control" placeholder="Product Sku" value="" />
<span asp-validation-for="ProductSku" class="text-danger"></span>
</div>
<div class="col-md-3">
<label asp-for="Name" class="form-label">Name</label>
<input asp-for="Name" class="form-control" placeholder="Product Name" />
<span asp-validation-for="Name" class="text-danger"></span>
</div>
<div class="col-md-3">
<label asp-for="Description" class="form-label">Description</label>
<input asp-for="Description" class="form-control" placeholder="Description" />
<span asp-validation-for="Description" class="text-danger"></span>
</div>
<div class="col-md-3">
<label asp-for="UnitPrice" class="form-label">Unit Price</label>
<input asp-for="UnitPrice" class="form-control" type="number" step="0.01" placeholder="Unit Price" />
<span asp-validation-for="UnitPrice" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success create-btn">Create</button>
<button type="button" class="btn btn-secondary cancel-create-btn">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Products\_CreateForm.cshtml =====

===== BEGIN FILE: Views\Products\_DisplayRow.cshtml =====

@model TaskTracker.Models.ProductRowViewModel
@{
if (Model == null || Model.Product == null)
{
return;
}
var product = Model.Product;
}
<div id="display-row-@product.ProductID" class="display-mode card mb-2 @(Model.Parity)-row">
<div class="card-body">
<div class="row">
<div class="col-md-3" data-field="ProductSku">@product.ProductSku</div>
<div class="col-md-3" data-field="Name">@product.Name</div>
<div class="col-md-3" data-field="Description">@product.Description</div>
<div class="col-md-2" data-field="UnitPrice">
@(product.UnitPrice is decimal price ? $"${price:F2}" : "")
</div>
<div class="col-md-2">
<button class="btn btn-primary edit-btn" data-id="@product.ProductID">Edit</button>
<a asp-action="Delete" asp-route-id="@product.ProductID" class="btn btn-danger">Delete</a>
</div>
</div>
</div>
</div>

===== END FILE: Views\Products\_DisplayRow.cshtml =====

===== BEGIN FILE: Views\Products\_EditFormRow.cshtml =====

@model TaskTracker.Models.ProductRowViewModel
@{
if (Model == null || Model.Product == null)
{
return;
}
var product = Model.Product;
}
<div id="edit-row-@product.ProductID" class="edit-mode card mb-2 @(Model.Parity)-row" style="display:none;">
<form id="edit-form-@product.ProductID" asp-action="Edit" asp-route-id="@product.ProductID" method="post" class="card-body">
<input type="hidden" asp-for="Product.ProductID" />
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-3">
<input asp-for="Product.ProductSku" class="form-control" placeholder="Product Sku" />
<span asp-validation-for="Product.ProductSku" class="text-danger"></span>
</div>
<div class="col-md-3">
<input asp-for="Product.Name" class="form-control" placeholder="Product Name" />
<span asp-validation-for="Product.Name" class="text-danger"></span>
</div>
<div class="col-md-3">
<input asp-for="Product.Description" class="form-control" placeholder="Description" />
<span asp-validation-for="Product.Description" class="text-danger"></span>
</div>
<div class="col-md-2">
<input asp-for="Product.UnitPrice" class="form-control" type="number" step="0.01" placeholder="Unit Price" />
<span asp-validation-for="Product.UnitPrice" class="text-danger"></span>
</div>
<div class="col-md-2">
<button type="submit" class="btn btn-success save-btn">Save</button>
<button type="button" class="btn btn-secondary cancel-btn" data-id="@product.ProductID">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Products\_EditFormRow.cshtml =====

===== BEGIN FILE: Views\Projects\Delete.cshtml =====

@model TaskTracker.Models.Project
@{
ViewData["Title"] = "Delete";
}
<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
<h4>Project</h4>
<hr />
<dl class="row">
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Name)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Name)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Description)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Description)
</dd>
<dt class = "col-sm-2">
@Html.DisplayNameFor(model => model.Rate)
</dt>
<dd class = "col-sm-10">
@Html.DisplayFor(model => model.Rate)
</dd>
</dl>
<form asp-action="Delete">
<input type="hidden" asp-for="ProjectID" />
<input type="submit" value="Delete" class="btn btn-danger" /> |
<a asp-action="Index">Back to List</a>
</form>
</div>

===== END FILE: Views\Projects\Delete.cshtml =====

===== BEGIN FILE: Views\Projects\Index.cshtml =====

@model IEnumerable<TaskTracker.Models.Project>
@{
ViewData["Title"] = "Projects";
}
<h1>Projects</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@await Html.PartialAsync("_CreateForm", new TaskTracker.Models.Project())
<p>
<button id="create-new-btn" class="btn btn-primary">Create New</button>
</p>
<div class="row mb-2">
<div class="col-md-4"><strong>@Html.DisplayNameFor(model => model.Name)</strong></div>
<div class="col-md-4"><strong>@Html.DisplayNameFor(model => model.Description)</strong></div>
<div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.Rate)</strong></div>
<div class="col-md-2"><strong>Actions</strong></div>
</div>
@{
var index = 1;
}
@foreach (var project in Model)
{
var projectRowViewModel = new ProjectRowViewModel(project, index);
@await Html.PartialAsync("_DisplayRow", projectRowViewModel)
@await Html.PartialAsync("_EditFormRow", projectRowViewModel)
index++;
}
<style>
.edit-mode .form-control, #create-form .form-control {
width: 100%;
box-sizing: border-box;
margin: 0;
padding: 4px;
}
.edit-mode .text-danger, #create-form .text-danger {
font-size: 0.8em;
display: block;
}
.edit-mode .btn, #create-form .btn {
margin-right: 5px;
}
.alert-success {
transition: opacity 1s ease-in-out;
}
</style>
@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script src="~/js/site.min.js" asp-append-version="true"></script>
}

===== END FILE: Views\Projects\Index.cshtml =====

===== BEGIN FILE: Views\Projects\_CreateForm.cshtml =====

@model TaskTracker.Models.Project
<div id="create-form" style="display:none; margin-bottom: 20px;">
<form asp-action="Create" method="post" class="card p-4">
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-4">
<label asp-for="Name" class="form-label">Name</label>
<input asp-for="Name" class="form-control" placeholder="Project Name" />
<span asp-validation-for="Name" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="Description" class="form-label">Description</label>
<input asp-for="Description" class="form-control" placeholder="Description" />
<span asp-validation-for="Description" class="text-danger"></span>
</div>
<div class="col-md-4">
<label asp-for="Rate" class="form-label">Project Rate</label>
<input asp-for="Rate" class="form-control" type="number" step="0.01" placeholder="Rate" />
<span asp-validation-for="Rate" class="text-danger"></span>
</div>
<div class="col-md-12">
<button type="submit" class="btn btn-success create-btn">Create</button>
<button type="button" class="btn btn-secondary cancel-create-btn">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Projects\_CreateForm.cshtml =====

===== BEGIN FILE: Views\Projects\_DisplayRow.cshtml =====

@model TaskTracker.Models.ProjectRowViewModel
@{
if (Model == null || Model.Project == null)
{
return;
}
var project = Model.Project;
}
<div id="display-row-@project.ProjectID" class="display-mode card mb-2 @(Model.Parity)-row">
<div class="card-body">
<div class="row">
<div class="col-md-4" data-field="Name">@project.Name</div>
<div class="col-md-4" data-field="Description">@project.Description</div>
<div class="col-md-2" data-field="Rate">
@(project.Rate is decimal rate ? $"${rate:F2}" : "")
</div>
<div class="col-md-2">
<button class="btn btn-primary edit-btn" data-id="@project.ProjectID">Edit</button>
<a asp-action="Delete" asp-route-id="@project.ProjectID" class="btn btn-danger">Delete</a>
</div>
</div>
</div>
</div>

===== END FILE: Views\Projects\_DisplayRow.cshtml =====

===== BEGIN FILE: Views\Projects\_EditFormRow.cshtml =====

@model TaskTracker.Models.ProjectRowViewModel
@{
if (Model == null || Model.Project == null)
{
return;
}
var project = Model.Project;
}
<div id="edit-row-@project.ProjectID" class="edit-mode card mb-2 @(Model.Parity)-row" style="display:none;">
<form id="edit-form-@project.ProjectID" asp-action="Edit" asp-route-id="@project.ProjectID" method="post" class="card-body">
<input type="hidden" asp-for="Project.ProjectID" />
<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<div class="row g-3">
<div class="col-md-4">
<input asp-for="Project.Name" class="form-control" placeholder="Project Name" />
<span asp-validation-for="Project.Name" class="text-danger"></span>
</div>
<div class="col-md-4">
<input asp-for="Project.Description" class="form-control" placeholder="Description" />
<span asp-validation-for="Project.Description" class="text-danger"></span>
</div>
<div class="col-md-2">
<input asp-for="Project.Rate" class="form-control" type="number" step="0.01" placeholder="Project Rate" />
<span asp-validation-for="Project.Rate" class="text-danger"></span>
</div>
<div class="col-md-2">
<button type="submit" class="btn btn-success save-btn">Save</button>
<button type="button" class="btn btn-secondary cancel-btn" data-id="@project.ProjectID">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\Projects\_EditFormRow.cshtml =====

===== BEGIN FILE: Views\Settings\Create.cshtml =====

@model TaskTracker.Models.Settings
@{
ViewData["Title"] = "Settings";
}
<h1>Settings</h1>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success" role="alert">
@TempData["SuccessMessage"]
</div>
}
<form asp-action="Update" method="post">
<input type="hidden" asp-for="Id" />
<div class="form-group">
<label asp-for="CompanyName" class="control-label"></label>
<input asp-for="CompanyName" class="form-control" />
<span asp-validation-for="CompanyName" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="AccountsReceivableAddress" class="control-label"></label>
<textarea asp-for="AccountsReceivableAddress" class="form-control"></textarea>
<span asp-validation-for="AccountsReceivableAddress" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="AccountsReceivablePhone" class="control-label"></label>
<input asp-for="AccountsReceivablePhone" class="form-control" />
<span asp-validation-for="AccountsReceivablePhone" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="AccountsReceivableEmail" class="control-label"></label>
<input asp-for="AccountsReceivableEmail" class="form-control" />
<span asp-validation-for="AccountsReceivableEmail" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="PaymentInformation" class="control-label"></label>
<textarea asp-for="PaymentInformation" class="form-control"></textarea>
<span asp-validation-for="PaymentInformation" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="ThankYouMessage" class="control-label"></label>
<textarea asp-for="ThankYouMessage" class="form-control"></textarea>
<span asp-validation-for="ThankYouMessage" class="text-danger"></span>
</div>
<div class="form-group">
<button type="submit" class="btn btn-primary">Save</button>
</div>
</form>
@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}

===== END FILE: Views\Settings\Create.cshtml =====

===== BEGIN FILE: Views\Settings\Index.cshtml =====

@model TaskTracker.Models.Settings
@{
ViewData["Title"] = "Settings";
}
<h1>Settings</h1>
<form asp-action="Update" method="post">
<div class="form-group">
<label asp-for="CompanyName"></label>
<input asp-for="CompanyName" class="form-control" />
<span asp-validation-for="CompanyName" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="AccountsReceivableAddress"></label>
<textarea asp-for="AccountsReceivableAddress" class="form-control"></textarea>
<span asp-validation-for="AccountsReceivableAddress" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="AccountsReceivablePhone"></label>
<input asp-for="AccountsReceivablePhone" class="form-control" />
<span asp-validation-for="AccountsReceivablePhone" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="AccountsReceivableEmail"></label>
<input asp-for="AccountsReceivableEmail" class="form-control" />
<span asp-validation-for="AccountsReceivableEmail" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="PaymentInformation"></label>
<textarea asp-for="PaymentInformation" class="form-control"></textarea>
<span asp-validation-for="PaymentInformation" class="text-danger"></span>
</div>
<div class="form-group">
<label asp-for="ThankYouMessage"></label>
<textarea asp-for="ThankYouMessage" class="form-control"></textarea>
<span asp-validation-for="ThankYouMessage" class="text-danger"></span>
</div>
<button type="submit" class="btn btn-primary">Save</button>
</form>

===== END FILE: Views\Settings\Index.cshtml =====

===== BEGIN FILE: Views\Shared\Error.cshtml =====

@model ErrorViewModel
@{
ViewData["Title"] = "Error";
}
<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>
@if (Model.ShowRequestId)
{
<p>
<strong>Request ID:</strong> <code>@Model.RequestId</code>
</p>
}
<h3>Development Mode</h3>
<p>
Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
<strong>The Development environment shouldn't be enabled for deployed applications.</strong>
It can result in displaying sensitive information from exceptions to end users.
For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
and restarting the app.
</p>

===== END FILE: Views\Shared\Error.cshtml =====

===== BEGIN FILE: Views\Shared\_Layout.cshtml =====

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>@ViewData["Title"] - TaskTracker</title>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
<link rel="stylesheet" href="~/TaskTracker.styles.css" asp-append-version="true" />
</head>
<body>
<header>
<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
<div class="container-fluid">
<a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">TaskTracker</a>
<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
<ul class="navbar-nav flex-grow-1">
@if (User.Identity.IsAuthenticated)
{
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="Clients" asp-action="Index">Clients</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="Projects" asp-action="Index">Projects</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="TimeEntries" asp-action="Index">Time Entries</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="Expenses" asp-action="Index">Expenses</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="Products" asp-action="Index">Products</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="Invoices" asp-action="Index">Invoices</a>
</li>
<li class="nav-item">
<a class="nav-link" asp-controller="Settings" asp-action="Index">
<img src="~/images/icons/settings.svg" alt="Settings Icon" class="nav-icon" />
</a>
</li>
}
else
{
<li class="nav-item">
<a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
</li>
}
</ul>
<partial name="_LoginPartial" />
</div>
</div>
</nav>
</header>
<div class="container">
<main role="main" class="pb-3">
@RenderBody()
</main>
</div>
<footer class="border-top footer text-muted">
<div class="container">
&copy; 2025 - TaskTracker - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
</div>
</footer>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>

===== END FILE: Views\Shared\_Layout.cshtml =====

===== BEGIN FILE: Views\Shared\_LoginPartial.cshtml =====

@using Microsoft.AspNetCore.Identity
@using TaskTracker.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
<li class="nav-item">
<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
</li>
<li class="nav-item">
<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
</form>
</li>
}
else
{
<li class="nav-item">
<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
</li>
<li class="nav-item">
<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
</li>
}
</ul>

===== END FILE: Views\Shared\_LoginPartial.cshtml =====

===== BEGIN FILE: Views\Shared\_ValidationScriptsPartial.cshtml =====

<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

===== END FILE: Views\Shared\_ValidationScriptsPartial.cshtml =====

===== BEGIN FILE: Views\TimeEntries\Delete.cshtml =====

@model TaskTracker.Models.TimeEntry
@{
ViewData["Title"] = "Delete";
}
<h1>Delete</h1>
<h3>Are you sure you want to delete this?</h3>
<div>
<h4>Time Entry</h4>
<hr />
<dl class="row">
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Client)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Client.Name)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Project)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Project.Name)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.StartDateTime)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.StartDateTime)
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.EndDateTime)
</dt>
<dd class="col-sm-10">
@(Model.EndDateTime.HasValue ? Model.EndDateTime.Value.ToString("g") : "")
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.HoursSpent)
</dt>
<dd class="col-sm-10">
@(Model.HoursSpent.HasValue ? Model.HoursSpent.Value.ToString("F2") : "")
</dd>
<dt class="col-sm-2">
@Html.DisplayNameFor(model => model.Description)
</dt>
<dd class="col-sm-10">
@Html.DisplayFor(model => model.Description)
</dd>
</dl>
<form asp-action="Delete">
<input type="hidden" asp-for="TimeEntryID" />
<input type="submit" value="Delete" class="btn btn-danger" /> |
<a asp-action="Index">Back to List</a>
</form>
</div>

===== END FILE: Views\TimeEntries\Delete.cshtml =====

===== BEGIN FILE: Views\TimeEntries\Index.cshtml =====

@model TaskTracker.Models.TimeEntriesIndexViewModel
@using Microsoft.AspNetCore.Mvc.Rendering
@{
ViewData["Title"] = "Time Entries";
var timezoneOffset = ViewBag.TimezoneOffset;
}
<h1>Time Entries</h1>
<div class="row mb-3">
<div class="col-12 col-md-6 col-lg-4">
<button type="button" id="create-new-btn" class="btn btn-primary" style="@(Model.VisibleCreateForm ? "display:none;" : "")">Create New</button>
</div>
</div>
@if (TempData["SuccessMessage"] != null)
{
<div class="alert alert-success alert-dismissible fade show" role="alert">
@TempData["SuccessMessage"]
<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}
@if (TempData["ErrorMessage"] != null)
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
@TempData["ErrorMessage"]
<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}
@await Html.PartialAsync("_CreateForm", Model)
<h2>Running timer(s)</h2>
@if (Model.TimeEntries.Any(t => t.EndDateTime == null))
{
<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
@foreach (var item in Model.TimeEntries.Where(t => t.EndDateTime == null))
{
<div class="col">
<div class="card h-100" id="display-row-@item.TimeEntryID">
<div class="card-body">
<h5 class="card-title">@item.Client?.Name</h5>
<p class="card-text"><strong>Project:</strong> @item.Project?.Name</p>
<p class="card-text"><strong>Started:</strong> @item.StartDateTime.AddMinutes(timezoneOffset).ToString("yyyy-MM-dd hh:mm tt")</p>
<p class="card-text"><strong>Hours Spent:</strong> <span class="hours-spent" data-time-entry-id="@item.TimeEntryID" data-start-utc="@item.StartDateTime.ToString("o")">N/A</span></p>
<p class="card-text"><strong>Description:</strong> @item.Description</p>
</div>
<div class="card-footer">
<form asp-action="StopTimer" method="post">
<input type="hidden" name="TimeEntryID" value="@item.TimeEntryID" />
<button type="submit" class="btn btn-danger">Stop Timer</button>
</form>
</div>
</div>
</div>
}
</div>
}
else
{
<p>No timers currently running</p>
}
<div style="padding-top: 20px;"></div> 
<h2>Completed time entries</h2>
@if (Model.TotalRecords > 0)
{
<div class="row mb-3">
<div class="col-12 col-md-6 col-lg-4">
<form asp-action="Index" method="get">
<label for="recordLimit" class="form-label">Records per page</label>
<select id="recordLimit" name="recordLimit" class="form-select" asp-items="@Model.RecordLimitOptions" onchange="this.form.submit()"></select>
<input type="hidden" name="page" value="1" />
</form>
</div>
</div>
<div class="row mb-3">
<div class="col-12">
<p>Showing @Model.TimeEntries.Count() of @Model.TotalRecords records</p>
@if (Model.TotalPages > 1)
{
<nav aria-label="Page navigation">
<ul class="pagination">
<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
<a class="page-link" asp-action="Index" asp-route-page="1" asp-route-recordLimit="@Model.RecordLimit">First</a>
</li>
<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
<a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-recordLimit="@Model.RecordLimit">Previous</a>
</li>
@for (int i = 1; i <= Model.TotalPages; i++)
{
<li class="page-item @(Model.CurrentPage == i ? "active" : "")">
<a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-recordLimit="@Model.RecordLimit">@i</a>
</li>
}
<li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
<a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-recordLimit="@Model.RecordLimit">Next</a>
</li>
<li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
<a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" asp-route-recordLimit="@Model.RecordLimit">Last</a>
</li>
</ul>
</nav>
}
</div>
</div>
<div class="row mb-2">
<div class="col-md-2"><strong>Client</strong></div>
<div class="col-md-2"><strong>Project</strong></div>
<div class="col-md-2"><strong>Start Date/Time</strong></div>
<div class="col-md-2"><strong>End Date/Time</strong></div>
<div class="col-md-2"><strong>Hours Spent</strong></div>
<div class="col-md-2"><strong>Description</strong></div>
</div>
var index = 1;
@foreach (var timeEntry in Model.TimeEntries.Where(t => t.EndDateTime != null))
{
var projectRowViewModel = new TimeEntryRowViewModel(timeEntry, index);
@await Html.PartialAsync("_DisplayRow", projectRowViewModel)
@await Html.PartialAsync("_EditFormRow", projectRowViewModel)
}
}
else
{
<p>No completed timers</p>
}
@section Scripts {
<script>
var userTimezoneOffset = @timezoneOffset;
</script>
}

===== END FILE: Views\TimeEntries\Index.cshtml =====

===== BEGIN FILE: Views\TimeEntries\_CreateForm.cshtml =====

@{
var displayStyle = ViewBag.VisibleCreateForm == true ? "" : "display:none;";
var divStyle = string.IsNullOrEmpty(displayStyle) ? "margin-bottom: 20px;" : $"{displayStyle} margin-bottom: 20px;";
}
<div id="create-form" style="@divStyle">
<form id="create-time-entry-form" asp-controller="TimeEntries" asp-action="Create" method="post">
<div class="row g-3">
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Client</label>
<select name="ClientID" class="form-control" asp-items="@ViewBag.ClientID" required></select>
<span asp-validation-for="@(new TaskTracker.Models.TimeEntry().ClientID)" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Project</label>
<select name="ProjectID" class="form-control" asp-items="@ViewBag.ProjectID" required></select>
<span asp-validation-for="@(new TaskTracker.Models.TimeEntry().ProjectID)" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Start Date/Time</label>
<input name="StartDateTime" class="form-control start-datetime" type="datetime-local" required />
<span asp-validation-for="@(new TaskTracker.Models.TimeEntry().StartDateTime)" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">End Date/Time</label>
<input name="EndDateTime" class="form-control end-datetime" type="datetime-local" />
<span asp-validation-for="@(new TaskTracker.Models.TimeEntry().EndDateTime)" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Hours Spent</label>
<input name="HoursSpent" class="form-control hours-spent" type="number" step="0.01" placeholder="Hours Spent" />
<span asp-validation-for="@(new TaskTracker.Models.TimeEntry().HoursSpent)" class="text-danger"></span>
</div>
<div class="col-12">
<label class="form-label">Description</label>
<textarea name="Description" class="form-control" rows="4" placeholder="Description"></textarea>
<span asp-validation-for="@(new TaskTracker.Models.TimeEntry().Description)" class="text-danger"></span>
</div>
<div class="col-12">
<input type="hidden" name="UserId" value="@(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? User.Identity.Name)" />
<input type="hidden" name="ReturnTo" value="@ViewBag.ReturnTo" />
<input type="hidden" name="action" id="form-action" value="" />
<button type="submit" class="btn btn-success create-btn" name="action" value="Create" disabled>Create</button>
<button type="button" class="btn btn-primary start-timer-btn" disabled>Start Timer</button>
<button type="button" class="btn btn-secondary cancel-create-btn">Cancel</button>
</div>
</div>
</form>
</div>

===== END FILE: Views\TimeEntries\_CreateForm.cshtml =====

===== BEGIN FILE: Views\TimeEntries\_DisplayRow.cshtml =====

@model TaskTracker.Models.TimeEntryRowViewModel
@{
if (Model == null || Model.TimeEntry == null)
{
return;
}
var timeEntry = Model.TimeEntry;
int timezoneOffset = (int)ViewBag.TimezoneOffset;
var startLocal = timeEntry.StartDateTime.AddMinutes(timezoneOffset);
var endLocal = timeEntry.EndDateTime is DateTime ? timeEntry.EndDateTime.Value.AddMinutes(timezoneOffset) : (DateTime?)null;
}
<div id="display-row-@timeEntry.TimeEntryID" class="display-mode card mb-2 @(Model.Parity)-row">
<div class="card-body">
<div class="row">
<div class="col-md-2" data-field="Client">@timeEntry.Client?.Name</div>
<div class="col-md-2" data-field="Project">@timeEntry.Project?.Name</div>
<div class="col-md-2" data-field="StartDateTime">@startLocal.ToString("g")</div>
<div class="col-md-2" data-field="EndDateTime">@(endLocal.HasValue ? endLocal.Value.ToString("g") : "")</div>
<div class="col-md-2" data-field="HoursSpent">@(timeEntry.HoursSpent is decimal ? timeEntry.HoursSpent.Value.ToString("F2") : "")</div>
<div class="col-md-2" data-field="Description">@timeEntry.Description</div>
<div class="col-md-2">
<button class="btn btn-primary edit-btn" data-id="@timeEntry.TimeEntryID">Edit</button>
<a asp-action="Delete" asp-route-id="@timeEntry.TimeEntryID" class="btn btn-danger">Delete</a>
</div>
</div>
</div>
</div>

===== END FILE: Views\TimeEntries\_DisplayRow.cshtml =====

===== BEGIN FILE: Views\TimeEntries\_EditFormRow.cshtml =====

@model TaskTracker.Models.TimeEntryRowViewModel
@{
if (Model == null || Model.TimeEntry == null)
{
return;
}
var TimeEntry = Model.TimeEntry;
int timezoneOffset = (int)ViewBag.TimezoneOffset;
var startLocal = TimeEntry.StartDateTime.AddMinutes(timezoneOffset);
var endLocal = TimeEntry.EndDateTime;
if (endLocal.HasValue)
{
endLocal = endLocal.Value.AddMinutes(timezoneOffset);
}
}
<div id="edit-row-@TimeEntry.TimeEntryID" class="edit-mode mb-3 @(Model.Parity)-row" style="display:none;">
<form id="edit-form-@TimeEntry.TimeEntryID" asp-action="Edit" asp-route-id="@TimeEntry.TimeEntryID" method="post">
<input type="hidden" asp-for="@TimeEntry.TimeEntryID" name="TimeEntryID" />
<input type="hidden" asp-for="@TimeEntry.UserId" name="UserId" />
<div class="card">
<div class="card-body">
<div class="row g-3">
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Client</label>
<select asp-for="@TimeEntry.ClientID" name="ClientID" class="form-control" asp-items="@ViewBag.ClientID"></select>
<span asp-validation-for="@TimeEntry.ClientID" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Project</label>
<select asp-for="@TimeEntry.ProjectID" name="ProjectID" class="form-control" asp-items="@ViewBag.ProjectID"></select>
<span asp-validation-for="@TimeEntry.ProjectID" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Start Date/Time</label>
<input asp-for="@startLocal" class="form-control start-datetime" type="datetime-local" name="StartDateTime" />
<span asp-validation-for="@TimeEntry.StartDateTime" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">End Date/Time</label>
<input asp-for="@endLocal" class="form-control end-datetime" type="datetime-local" name="EndDateTime" />
<span asp-validation-for="@TimeEntry.EndDateTime" class="text-danger"></span>
</div>
<div class="col-12 col-md-6 col-lg-4">
<label class="form-label">Hours Spent</label>
<input asp-for="@TimeEntry.HoursSpent" class="form-control hours-spent" type="number" step="0.01" name="HoursSpent" />
<span asp-validation-for="@TimeEntry.HoursSpent" class="text-danger"></span>
</div>
<div class="col-12">
<label class="form-label">Description</label>
<textarea asp-for="@TimeEntry.Description" name="Description" class="form-control" rows="4"></textarea>
<span asp-validation-for="@TimeEntry.Description" class="text-danger"></span>
</div>
<div class="col-12">
<button type="submit" class="btn btn-success save-btn">Save</button>
<button type="button" class="btn btn-secondary cancel-btn" data-id="@TimeEntry.TimeEntryID">Cancel</button>
</div>
</div>
</div>
</div>
</form>
</div>

===== END FILE: Views\TimeEntries\_EditFormRow.cshtml =====

===== BEGIN FILE: Views\_ViewImports.cshtml =====

@using TaskTracker
@using TaskTracker.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

===== END FILE: Views\_ViewImports.cshtml =====

===== BEGIN FILE: Views\_ViewStart.cshtml =====

@{
Layout = "_Layout";
}

===== END FILE: Views\_ViewStart.cshtml =====

