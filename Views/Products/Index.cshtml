@using TaskTracker.Models.Product
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<!-- Display success or error messages -->
@await Html.PartialAsync("~/Views/Shared/_AlertsPartial.cshtml")

@await Html.PartialAsync("_CreateForm", new Product {ProductSku = "instatiate"})

<p>
    <button id="create-new-btn" class="btn btn-primary">Create New</button>
</p>

<div class="row mb-2">
    <div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.ProductSku)</strong></div>
    <div class="col-md-4"><strong>@Html.DisplayNameFor(model => model.Name)</strong></div>
    <div class="col-md-4"><strong>@Html.DisplayNameFor(model => model.Description)</strong></div>
    <div class="col-md-2"><strong>@Html.DisplayNameFor(model => model.UnitPrice)</strong></div>
</div>

@{
    var index = 1;
}
@foreach (var product in Model)
{
    var productRowViewModel = new ProductRowViewModel(product, index);
    @await Html.PartialAsync("_DisplayRow", productRowViewModel)
    @await Html.PartialAsync("_EditFormRow", productRowViewModel)
    index++;
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    }
