@model TaskTracker.Models.ProductRowViewModel

@{
    if (Model == null || Model.Product == null)
    {
        return;
    }

    var product = Model.Product;
}

<div id="edit-row-@product.ProductID" class="edit-mode card mb-2 @(Model.Parity)-row" style="display:none;">
    <form id="edit-form-@product.ProductID" asp-action="Edit" asp-route-id="@product.ProductID" method="post" class="card-body">
        <input type="hidden" asp-for="Product.ProductID" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row g-3">
            <div class="col-md-3">
                <input asp-for="Product.ProductSku" class="form-control" placeholder="Product Sku" />
                <span asp-validation-for="Product.ProductSku" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <input asp-for="Product.Name" class="form-control" placeholder="Product Name" />
                <span asp-validation-for="Product.Name" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <input asp-for="Product.Description" class="form-control" placeholder="Description" />
                <span asp-validation-for="Product.Description" class="text-danger"></span>
            </div>
            <div class="col-md-2">
                <input asp-for="Product.UnitPrice" class="form-control" type="number" step="0.01" placeholder="Unit Price" />
                <span asp-validation-for="Product.UnitPrice" class="text-danger"></span>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-success save-btn">Save</button>
                <button type="button" class="btn btn-secondary cancel-btn" data-id="@product.ProductID">Cancel</button>
            </div>
        </div>
    </form>
</div>