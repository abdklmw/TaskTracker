@using TaskTracker.Models.TimeEntries
@model TimeEntryRowViewModel
@{
    if (Model == null || Model.TimeEntry == null)
    {
        return;
    }

    var timeEntry = Model.TimeEntry;
    int timezoneOffset = (int)ViewBag.TimezoneOffset;
    var startLocal = timeEntry.StartDateTime.AddMinutes(timezoneOffset);
    var endLocal = timeEntry.EndDateTime is DateTime ? timeEntry.EndDateTime.Value.AddMinutes(timezoneOffset) : (DateTime?)null;
}

<div id="display-row-@timeEntry.TimeEntryID" class="display-mode card mb-2 @(Model.Parity)-row">
    <div class="card-body">
        <div class="row">
            <div class="col-md-2" data-field="Client">@timeEntry.Client?.Name</div>
            <div class="col-md-2" data-field="Project">@timeEntry.Project?.Name</div>
            <div class="col-md-2" data-field="StartDateTime">@startLocal.ToString("g")</div>
            <div class="col-md-2" data-field="EndDateTime">@(endLocal.HasValue ? endLocal.Value.ToString("g") : "")</div>
            <div class="col-md-2" data-field="HoursSpent">@(timeEntry.HoursSpent is decimal ? timeEntry.HoursSpent.Value.ToString("F2") : "")</div>
            <div class="col-md-2" data-field="Description">@timeEntry.Description</div>
            <div class="col-md-2">
                <button class="btn btn-primary edit-btn" data-id="@timeEntry.TimeEntryID">Edit</button>
                <a asp-action="Delete" asp-route-id="@timeEntry.TimeEntryID" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>
